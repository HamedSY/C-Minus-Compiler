grammar = [
    {"Program": ["DeclarationList", "$", "#main_starter"]},
    {"DeclarationList": ["Declaration", "DeclarationList"]},
    {"DeclarationList": []},
    {"Declaration": ["DeclarationInitial", "DeclarationPrime"]},
    {"DeclarationInitial": ["TypeSpecifier", "#put_id", "ID"]},
    {"DeclarationPrime": ["FunDeclarationPrime"]},
    {"DeclarationPrime": ["VarDeclarationPrime"]},
    {"VarDeclarationPrime": ["#none_array_declaration", ";"]},
    {"VarDeclarationPrime": ["[", "#array_declaration", "NUM", "]", ";"]},
    {"FunDeclarationPrime": ["#fun_declaration", "(", "Params", ")", "#save_stack_frame", "CompoundStmt",
                             "#fun_declaration_end"]},
    {"TypeSpecifier": ["#type_specifier", "int"]},
    {"TypeSpecifier": ["#type_specifier", "void"]},
    {"Params": ["#type_specifier", "int", "#put_id", "ID", "ParamPrime", "ParamList"]},
    {"Params": ["void"]},
    {"ParamList": [",", "Param", "ParamList"]},
    {"ParamList": []},
    {"Param": ["DeclarationInitial", "ParamPrime"]},
    {"ParamPrime": ["[", "#param_type_array", "]"]},
    {"ParamPrime": ["#param_type_n_array"]},
    {"CompoundStmt": ["{", "DeclarationList", "StatementList", "}"]},
    {"StatementList": ["Statement", "StatementList"]},
    {"StatementList": []},
    {"Statement": ["ExpressionStmt"]},
    {"Statement": ["CompoundStmt"]},
    {"Statement": ["SelectionStmt"]},
    {"Statement": ["IterationStmt"]},
    {"Statement": ["ReturnStmt"]},
    {"ExpressionStmt": ["Expression", "#pop", ";"]},
    {"ExpressionStmt": ["break", "#save_break", ";"]},
    {"ExpressionStmt": [";"]},
    {"SelectionStmt": ["if", "(", "Expression", ")", "#save", "Statement", "ElseStmt"]},
    {"ElseStmt": ["endif", "#jpf"]},
    {"ElseStmt": ["else", "#jpf_save", "Statement", "#jp", "endif"]},
    {"IterationStmt": ["while", "#label", "(", "Expression", ")", "#save", "Statement", "#jpfw", "#while"]},
    {"ReturnStmt": ["return", "ReturnStmtPrime"]},
    {"ReturnStmtPrime": [";", "#return_void"]},
    {"ReturnStmtPrime": ["Expression", "#return_value", ";"]},
    {"Expression": ["SimpleExpressionZegond"]},
    {"Expression": ["#pid", "ID", "B"]},
    {"B": ["=", "Expression", "#assign"]},
    {"B": ["[", "Expression", "]", "#array_index", "H"]},
    {"B": ["SimpleExpressionPrime"]},
    {"H": ["=", "Expression", "#assign"]},
    {"H": ["G", "D", "C"]},
    {"SimpleExpressionZegond": ["AdditiveExpressionZegond", "C"]},
    {"SimpleExpressionPrime": ["AdditiveExpressionPrime", "C"]},
    {"C": ["#save_operation", "Relop", "AdditiveExpression", "#do_operation"]},
    {"C": []},
    {"Relop": ["<"]},
    {"Relop": ["=="]},
    {"AdditiveExpression": ["Term", "D"]},
    {"AdditiveExpressionPrime": ["TermPrime", "D"]},
    {"AdditiveExpressionZegond": ["TermZegond", "D"]},
    {"D": ["#save_operation", "Addop", "Term", "#do_operation", "D"]},
    {"D": []},
    {"Addop": ["+"]},
    {"Addop": ["-"]},
    {"Term": ["SignedFactor", "G"]},
    {"TermPrime": ["SignedFactorPrime", "G"]},
    {"TermZegond": ["SignedFactorZegond", "G"]},
    {"G": ["#save_operation", "Mulop", "SignedFactor", "#do_operation", "G"]},
    {"G": []},
    {"Mulop": ["*"]},
    {"Mulop": ["/"]},
    {"SignedFactor": ["+", "Factor"]},
    {"SignedFactor": ["-", "Factor"]},
    {"SignedFactor": ["Factor"]},
    {"SignedFactorPrime": ["FactorPrime"]},
    {"SignedFactorZegond": ["+", "Factor"]},
    {"SignedFactorZegond": ["-", "Factor"]},
    {"SignedFactorZegond": ["FactorZegond"]},
    {"Factor": ["(", "Expression", ")"]},
    {"Factor": ["#pid", "ID", "VarCallPrime"]},
    {"Factor": ["#push", "NUM"]},
    {"VarCallPrime": ["(", "#start_args", "Args", ")", "#call_function"]},
    {"VarCallPrime": ["VarPrime"]},
    {"VarPrime": ["[", "Expression", "#array_index", "]"]},
    {"VarPrime": []},
    {"FactorPrime": ["(", "#start_args", "Args", ")", "#call_function"]},
    {"FactorPrime": []},
    {"FactorZegond": ["(", "Expression", ")"]},
    {"FactorZegond": ["#push", "NUM"]},
    {"Args": ["ArgList"]},
    {"Args": []},
    {"ArgList": ["Expression", "#fill_record", "ArgListPrime"]},
    {"ArgListPrime": [",", "Expression", "#fill_record", "ArgListPrime"]},
    {"ArgListPrime": []},
]
